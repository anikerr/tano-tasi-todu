{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/components/hero.tsx","webpack:///./src/components/description.tsx"],"names":["useStyles","makeStyles","root","About","data","about","strapiAbout","seo","console","log","hero","source","content","body","src","strapiPeople","photo","publicURL","backgroundImage","cover","backgroundPosition","backgroundSize","backgroundRepeat","backgroundAttachment","minHeight","tTheme","size","pageHero","overlay","gradientOverlay","opacity","width","text","display","height","position","top","appBar","justifyContent","alignItems","textShadow","Hero","classes","className","variant","color","title","textAlign","lineHeight","marginTop","maxWidth","container","spacing","justify","item","xs","escapeHtml"],"mappings":"6FAAA,4FAqCMA,EAAYC,YAAW,CAC3BC,KAAM,KAmBOC,UAhBD,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACTC,EAAQD,EAAKE,YACbC,EAAMH,EAAKE,YAAYC,IACbP,IAEhB,OADAQ,QAAQC,IAAI,CAAEL,SAEZ,kBAAC,IAAD,CAAQG,IAAKA,GACX,kBAAC,IAAD,CAAMG,KAAML,EAAMK,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaC,OAAQN,EAAMO,QAAQC,OACnC,yBAAKC,IAAKV,EAAKW,aAAaC,MAAMC,gB,kCCnD1C,6DAMMjB,EAAYC,YAAW,CAC3BC,KAAM,CACJgB,gBAAiB,SAACR,GAAD,aAAsBA,EAAKS,MAAMF,UAAjC,KACjBG,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBC,qBAAsB,QACtBC,UAAWC,IAAOC,KAAKC,UAEzBC,QAAS,CACPV,gBAAiB,SAACR,GAAD,OAAWA,EAAKmB,gBAAkBnB,EAAKmB,gBAA5B,yCAC5BC,QAAS,IACTN,UAAWC,IAAOC,KAAKC,SACvBI,MAAO,SAETC,KAAM,CACJC,QAAS,OACTC,OAAQT,IAAOC,KAAKC,SACpBI,MAAO,OACPI,SAAU,WACVC,IAAKX,IAAOC,KAAKW,OACjBC,eAAgB,SAChBC,WAAY,SACZC,WAAY,4BAkBDC,IAdF,SAAC,GAAa,IAAX/B,EAAW,EAAXA,KACRgC,EAAU1C,EAAUU,GAC1B,OACE,yBAAKiC,UAAWD,EAAQxC,MACtB,yBAAKyC,UAAWD,EAAQd,UACxB,yBAAKe,UAAWD,EAAQV,MACtB,kBAAC,IAAD,CAAYY,QAAQ,KAAKC,MAAM,iBAC5BnC,EAAKoC,W,kCCxChB,sEAOM9C,EAAYC,YAAW,CAC3BC,KAAM,CACJ6C,UAAW,SACXC,WAAY,UACZC,UAAW,OACXC,SAAU,OAgBCT,IAZF,SAAC,GAAe,IAAb9B,EAAa,EAAbA,OACR+B,EAAU1C,IAEhB,OACE,kBAAC,IAAD,CAAMmD,WAAS,EAACC,QAAS,EAAGC,QAAS,UACnC,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIZ,UAAWD,EAAQxC,MACpC,kBAAC,IAAD,CAAUS,OAAQA,EAAQ6C,YAAY","file":"component---src-pages-about-tsx-b55b5ff8cd74f04828b6.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport { Container, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Img from 'gatsby-image';\n\nimport Hero from '../components/hero';\nimport Description from '../components/description';\n\nexport const query = graphql`\n  query {\n    strapiAbout {\n      hero {\n        title\n        cover {\n          publicURL\n        }\n      }\n      content {\n        body\n      }\n      seo {\n        metaTitle\n        metaDescription\n      }\n    }\n    strapiPeople {\n      bio\n      name\n      photo {\n        publicURL\n      }\n    }\n  }\n`;\n\nconst useStyles = makeStyles({\n  root: {},\n});\n\nconst About = ({ data }) => {\n  const about = data.strapiAbout;\n  const seo = data.strapiAbout.seo;\n  const classes = useStyles();\n  console.log({ data });\n  return (\n    <Layout seo={seo}>\n      <Hero hero={about.hero} />\n      <Container>\n        <Description source={about.content.body} />\n        <img src={data.strapiPeople.photo.publicURL} />\n      </Container>\n    </Layout>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport tTheme from '../theme';\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundImage: (hero: any) => `url(${hero.cover.publicURL})`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'fixed',\n    minHeight: tTheme.size.pageHero,\n  },\n  overlay: {\n    backgroundImage: (hero) => (hero.gradientOverlay ? hero.gradientOverlay : `linear-gradient(#f49e1e69, #4196769e)`),\n    opacity: 0.65,\n    minHeight: tTheme.size.pageHero,\n    width: '100vw',\n  },\n  text: {\n    display: 'flex',\n    height: tTheme.size.pageHero,\n    width: '100%',\n    position: 'absolute',\n    top: tTheme.size.appBar,\n    justifyContent: 'center',\n    alignItems: 'center',\n    textShadow: '1px 1px 17px #0000004f',\n  },\n});\n\nconst Hero = ({ hero }) => {\n  const classes = useStyles(hero);\n  return (\n    <div className={classes.root}>\n      <div className={classes.overlay}></div>\n      <div className={classes.text}>\n        <Typography variant=\"h1\" color=\"textSecondary\">\n          {hero.title}\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default Hero;\n","import React from 'react';\nimport Markdown from 'react-markdown';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport tTheme from '../theme';\nimport { Box, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n    lineHeight: '1.75rem',\n    marginTop: '4rem',\n    maxWidth: 900\n  },\n})\n\nconst Hero = ({ source }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={2} justify={'center'}>\n      <Grid item xs={12} className={classes.root}>\n        <Markdown source={source} escapeHtml={false} />\n      </Grid>\n    </Grid>\n  )\n};\n\nexport default Hero;\n"],"sourceRoot":""}